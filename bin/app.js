#!/usr/bin/env node
const {readPackageJson, getAllDependencies, prettyPrint} = require("./common");
const term = require('terminal-kit').terminal;
const yargs = require("yargs");
const {OSSURL, OSVURL} = require("./constants");
const providers = {
    oss: {url: OSSURL, import: require('./ossindex')},
    osv: {url: OSVURL, import: require('./osvindex')}
}

const options = yargs
    .usage("Usage: check -with <provider-name> -format <display-option>")
    .option("with", {
        describe: "Which vulnerability provider you want to use",
        choices: ['oss', 'osv'],
        type: "string",
        demandOption: true
    })
    .option("format", {
        describe: "how to display the output as i.e table or json",
        choices: ['table', 'json'],
        type: "string",
        default: "table",
        demandOption: false
    })
    .help()
    .argv;

const index = providers[options.with];

/**
 * entry point of the program
 * @returns {Promise<void>}
 */
const runProgram = async () => {
    const content = await readPackageJson("./package.json");
    const dependencies = await getAllDependencies(content);
    const responses = await index.import.makeRequest(index.import.format(dependencies));

    if (options.format === 'json') {
        console.log(JSON.stringify({
            vulnerabilities: responses
        }));
        return;
    }

    if (responses.length === 0) {
        term.green.bold(`\n-> Congratulation! Program Found 0 vulnerabilities In total\n`);
        return;
    }

    term.bold.red(`\n-> Program Found ${responses.length} vulnerabilities In total\n`);
    prettyPrint(responses);
};

options.format === 'table' && term.bold.underline(`Using ${index.url} to check vulnerability...\n`);
runProgram();